{"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"Digest","symbolKind":"module","roleHeading":"Framework","title":"Digest","modules":[{"name":"Digest"}],"role":"collection"},"kind":"symbol","primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Digest package provides the following functionality:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Message Digest algorithms - SHA1, SHA2 and SHA3","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extendable Output Functions - SHAKE and XOF"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Hash Based Message Authentication Codes - HMAC"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Key Derivation Functions - HKDF and X963KDF"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Mask Generation Function - MGF1"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Message Digest","anchor":"Message-Digest","type":"heading","level":3},{"inlineContent":[{"text":"Message digesting is a three step operation.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}]},{"type":"codeListing","syntax":"swift","code":["import Digest","","\/\/ 1. create the message digest instance","let md = MessageDigest(.SHA3_224)","","\/\/ 2. feed the data to digest in one or more steps","md.update([1, 2, 3])","md.update([4, 5, 6])","","\/\/ 3. compute the digest","let digest1 = md.digest()","","\/\/ The steps can be combined","let digest2 = MessageDigest(.SHA3_224).digest([1, 2, 3, 4, 5, 6])","","print(\"digest1:\", digest1)","print(\"digest2:\", digest2)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"code":["digest1: [62, 55, 233, 98, 97, 184, 219, 20, 116, 115, 238, 1, 51, 166, 35, 107, 203, 162, 84, 97, 158, 122, 189, 59, 178, 19, 16, 201]","digest2: [62, 55, 233, 98, 97, 184, 219, 20, 116, 115, 238, 1, 51, 166, 35, 107, 203, 162, 84, 97, 158, 122, 189, 59, 178, 19, 16, 201]"],"syntax":"swift","type":"codeListing"},{"type":"heading","text":"SHAKE and XOF","anchor":"SHAKE-and-XOF","level":3},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Digest\/documentation\/Digest\/SHAKE","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/Digest\/documentation\/Digest\/XOF","isActive":true,"type":"reference"},{"text":" are extendable output functions which can generate output of any desired length based on a given seed.","type":"text"}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"SHAKE 128 example","type":"text"}]}],"type":"paragraph"},{"syntax":"swift","code":["import Digest","","let shake = SHAKE(.SHAKE128)","shake.update([1, 2, 3])","print(shake.digest(25))"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"giving:"}],"type":"paragraph"},{"syntax":"swift","code":["[218, 239, 167, 7, 93, 32, 41, 187, 214, 105, 12, 86, 166, 83, 123, 154, 218, 108, 92, 47, 146, 196, 24, 130, 197]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you know you need 25 bytes of output, you must request them all at once,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"digest(12)"},{"text":" followed by ","type":"text"},{"type":"codeVoice","code":"digest(13)"},{"type":"text","text":" wonâ€™t work, because the "},{"code":"digest","type":"codeVoice"},{"text":" method resets ","type":"text"},{"code":"shake","type":"codeVoice"},{"type":"text","text":" to its original state."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"XOF 128 example"}]}]},{"code":["import Digest","","let xof = XOF(.XOF128, [1, 2, 3])","var z: Bytes = []","for _ in 0 ..< 25 {","    z += xof.read(1)","}","print(z)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"giving:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["[218, 239, 167, 7, 93, 32, 41, 187, 214, 105, 12, 86, 166, 83, 123, 154, 218, 108, 92, 47, 146, 196, 24, 130, 197]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"XOF is similar to SHAKE, but as the examples show, the XOF ","type":"text"},{"type":"codeVoice","code":"read"},{"type":"text","text":" method can be called many times to accumulate the total amount of output."},{"text":" ","type":"text"},{"type":"text","text":"XOF has no "},{"type":"codeVoice","code":"update"},{"text":" method, the initial seed must be supplied in the constructor.","type":"text"}]},{"anchor":"Message-Authentication-Codes","text":"Message Authentication Codes","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"reference","identifier":"doc:\/\/Digest\/documentation\/Digest\/HMAC","isActive":true},{"type":"text","text":" to generate a message authentication code is a three step operation."}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}],"type":"paragraph"},{"syntax":"swift","code":["import Digest","","\/\/ 1. create the HMAC instance with a specified message digest and secret key","let hmac = HMAC(.SHA2_256, [1, 2, 3, 4, 5, 6])","","\/\/ 2. update the HMAC instance with the text to compute the code for","hmac.update([1, 2, 3])","","\/\/ 3. compute the code","let code = hmac.compute()","print(code)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"type":"codeListing","code":["[165, 171, 8, 206, 249, 140, 216, 179, 11, 30, 187, 136, 116, 132, 141, 34, 66, 169, 175, 107, 27, 31, 84, 190, 108, 60, 61, 222, 233, 97, 15, 247]"],"syntax":"swift"},{"type":"heading","anchor":"Key-Derivation-Functions","text":"Key Derivation Functions","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"A key derivation function generates a symmetric key from a shared secret. There are two key derivation functions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"HKDF as specified in [RFC 5859]"}]}]},{"content":[{"inlineContent":[{"text":"X963KDF as specified in [SEC 1].","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Both are static methods in the ","type":"text"},{"identifier":"doc:\/\/Digest\/documentation\/Digest\/KDF","isActive":true,"type":"reference"},{"type":"text","text":" structure."}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}],"type":"paragraph"},{"code":["import Digest","","let key1 = KDF.HKDF(.SHA2_224, [1, 2, 3, 4, 5, 6, 7, 8], 12, [1, 2, 3], [])","print(\"HKDF key   \", key1)","","let key2 = KDF.X963KDF(.SHA2_224, [1, 2, 3, 4, 5, 6, 7, 8], 12, [1, 2, 3])","print(\"X963KDF key\", key2)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"code":["HKDF key    [209, 96, 93, 84, 150, 249, 149, 185, 105, 184, 47, 210]","X963KDF key [110, 88, 12, 176, 49, 119, 151, 82, 163, 233, 226, 9]"],"type":"codeListing","syntax":"swift"},{"text":"Mask Generation Function","type":"heading","level":3,"anchor":"Mask-Generation-Function"},{"type":"paragraph","inlineContent":[{"text":"The mask generation function MGF1 as specified in [RFC 8017], is a static method in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/Digest\/documentation\/Digest\/KDF","isActive":true},{"type":"text","text":" structure."},{"type":"text","text":"\n"},{"type":"text","text":"It generates a mask of a specified size from a specified message digest and seed."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example","type":"text"}],"type":"strong"}]},{"syntax":"swift","type":"codeListing","code":["import Digest","","let mask = KDF.MGF1(.SHA1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 12)","print(mask)"]},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"code":["[224, 166, 61, 124, 140, 77, 129, 205, 28, 5, 103, 191]"],"type":"codeListing","syntax":"swift"},{"level":3,"type":"heading","anchor":"Usage","text":"Usage"},{"inlineContent":[{"text":"To use Digest, in your project Package.swift file add a dependency like","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["dependencies: [","  package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.4.0\"),","]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Digest itself does not depend on other packages.","type":"text"}]},{"style":"important","type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"text":" ","type":"text"},{"type":"text","text":"Digest requires Swift 5.0. It also requires that the "},{"type":"codeVoice","code":"Int"},{"text":" and ","type":"text"},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" types be 64 bit types."}]}]}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Digest\/documentation\/Digest"},"abstract":[{"text":"Digest utilities","type":"text"}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Digest\/documentation\/Digest\/MessageDigest"]},{"title":"Structures","identifiers":["doc:\/\/Digest\/documentation\/Digest\/HMAC","doc:\/\/Digest\/documentation\/Digest\/KDF","doc:\/\/Digest\/documentation\/Digest\/SHAKE","doc:\/\/Digest\/documentation\/Digest\/XOF"]},{"title":"Type Aliases","identifiers":["doc:\/\/Digest\/documentation\/Digest\/Byte","doc:\/\/Digest\/documentation\/Digest\/Bytes"]},{"identifiers":["doc:\/\/Digest\/documentation\/Digest\/References"],"title":"Additional Information"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/digest"]}],"references":{"doc://Digest/documentation/Digest/Bytes":{"abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bytes"}],"navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"type":"topic","url":"\/documentation\/digest\/bytes","kind":"symbol","identifier":"doc:\/\/Digest\/documentation\/Digest\/Bytes","title":"Bytes","role":"symbol"},"doc://Digest/documentation/Digest/XOF":{"url":"\/documentation\/digest\/xof","navigatorTitle":[{"kind":"identifier","text":"XOF"}],"abstract":[{"text":"The XOF structure","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"XOF","kind":"identifier"}],"role":"symbol","title":"XOF","identifier":"doc:\/\/Digest\/documentation\/Digest\/XOF","type":"topic"},"doc://Digest/documentation/Digest/HMAC":{"role":"symbol","navigatorTitle":[{"text":"HMAC","kind":"identifier"}],"title":"HMAC","identifier":"doc:\/\/Digest\/documentation\/Digest\/HMAC","kind":"symbol","url":"\/documentation\/digest\/hmac","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HMAC"}],"abstract":[{"type":"text","text":"The HMAC structure"}]},"doc://Digest/documentation/Digest/SHAKE":{"identifier":"doc:\/\/Digest\/documentation\/Digest\/SHAKE","title":"SHAKE","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The SHAKE structure"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SHAKE","kind":"identifier"}],"navigatorTitle":[{"text":"SHAKE","kind":"identifier"}],"url":"\/documentation\/digest\/shake"},"doc://Digest/documentation/Digest/Byte":{"url":"\/documentation\/digest\/byte","role":"symbol","type":"topic","navigatorTitle":[{"text":"Byte","kind":"identifier"}],"identifier":"doc:\/\/Digest\/documentation\/Digest\/Byte","kind":"symbol","title":"Byte","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Byte"}]},"doc://Digest/documentation/Digest/MessageDigest":{"identifier":"doc:\/\/Digest\/documentation\/Digest\/MessageDigest","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MessageDigest","kind":"identifier"}],"type":"topic","url":"\/documentation\/digest\/messagedigest","role":"symbol","navigatorTitle":[{"text":"MessageDigest","kind":"identifier"}],"kind":"symbol","title":"MessageDigest","abstract":[{"type":"text","text":"The MessageDigest class"}]},"doc://Digest/documentation/Digest/KDF":{"kind":"symbol","navigatorTitle":[{"text":"KDF","kind":"identifier"}],"url":"\/documentation\/digest\/kdf","role":"symbol","abstract":[{"type":"text","text":"The KDF structure"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KDF"}],"title":"KDF","identifier":"doc:\/\/Digest\/documentation\/Digest\/KDF"},"doc://Digest/documentation/Digest":{"title":"Digest","type":"topic","role":"collection","abstract":[{"text":"Digest utilities","type":"text"}],"identifier":"doc:\/\/Digest\/documentation\/Digest","url":"\/documentation\/digest","kind":"symbol"},"doc://Digest/documentation/Digest/References":{"abstract":[{"text":"Algorithms from the following documents have been used in the implementation","type":"text"}],"role":"article","url":"\/documentation\/digest\/references","identifier":"doc:\/\/Digest\/documentation\/Digest\/References","kind":"article","type":"topic","title":"References"}}}